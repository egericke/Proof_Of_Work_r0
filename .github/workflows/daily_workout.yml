name: Daily Workout
on:
  schedule:
    - cron: '0 1 * * *'  # Runs daily at 1:00 AM UTC
  workflow_dispatch:     # Allows manual triggering

jobs:
  daily:
    runs-on: ubuntu-24.04
    steps:
      - name: Check out repository
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Install Python dependencies
        run: pip install --no-cache-dir -r requirements.txt

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20'

      - name: Install Node.js dependencies
        working-directory: ./scripts
        run: npm install

      - name: Debug Garmin scrape (CSV Export)
        working-directory: ./scripts
        run: node garmin_scrape.js
        env:
          GARMIN_USERNAME: ${{ secrets.GARMIN_USERNAME }}
          GARMIN_PASSWORD: ${{ secrets.GARMIN_PASSWORD }}
        continue-on-error: true  # Continue even if this step fails for debugging

      - name: Upload debug CSV (if exists)
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: garmin-csv-debug
          path: /tmp/activities.csv
          if-no-files-found: ignore

      - name: Upload debug screenshots (if exists)
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: debug-screenshots
          path: scripts/*.png
          if-no-files-found: ignore

      - name: Fetch data and store in Supabase
        env:
          SUPABASE_DB_HOST: ${{ secrets.SUPABASE_DB_HOST }}
          SUPABASE_DB_PORT: ${{ secrets.SUPABASE_DB_PORT }}
          SUPABASE_DB_NAME: ${{ secrets.SUPABASE_DB_NAME }}
          SUPABASE_DB_USER: ${{ secrets.SUPABASE_DB_USER }}
          SUPABASE_DB_PASSWORD: ${{ secrets.SUPABASE_DB_PASSWORD }}
          GARMIN_USERNAME: ${{ secrets.GARMIN_USERNAME }}
          GARMIN_PASSWORD: ${{ secrets.GARMIN_PASSWORD }}
          STRAVA_CLIENT_ID: ${{ secrets.STRAVA_CLIENT_ID }}
          STRAVA_CLIENT_SECRET: ${{ secrets.STRAVA_CLIENT_SECRET }}
          STRAVA_REFRESH_TOKEN: ${{ secrets.STRAVA_REFRESH_TOKEN }}
          TOGGL_API_KEY: ${{ secrets.TOGGL_API_KEY }}
        run: python -m scripts.main
        continue-on-error: true  # Continue for debugging

      - name: Generate screenshot
        working-directory: ./scripts
        run: node screenshot_chart.js
        env:
          DASHBOARD_URL: ${{ secrets.DASHBOARD_URL }}  # Ensure this is set if needed
        continue-on-error: true

      - name: Upload screenshot (if exists)
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: screenshot
          path: scripts/screenshot.png
          if-no-files-found: ignore

      - name: Post to social media
        run: python -m scripts.post_to_social screenshot.png "Daily workout proof" --twitter --instagram
        env:
          TWITTER_API_KEY: ${{ secrets.TWITTER_API_KEY }}
          TWITTER_API_SECRET: ${{ secrets.TWITTER_API_SECRET }}
          TWITTER_ACCESS_TOKEN: ${{ secrets.TWITTER_ACCESS_TOKEN }}
          TWITTER_ACCESS_SECRET: ${{ secrets.TWITTER_ACCESS_SECRET }}
          INSTAGRAM_USER_ID: ${{ secrets.INSTAGRAM_USER_ID }}
          INSTAGRAM_PAGE_ACCESS_TOKEN: ${{ secrets.INSTAGRAM_PAGE_ACCESS_TOKEN }}
        continue-on-error: true

      - name: Log workflow completion
        if: always()
        run: |
          echo "Workflow completed with status: ${{ job.status }}"
